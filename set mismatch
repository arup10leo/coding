class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {
        map<int,int>m;
        int sum=0;
        for(int i=0;i<nums.size();i++){
            m[nums[i]]++;
            
        }
        int n = nums.size();
        int r =*max_element(nums.begin(), nums.end());
        for(int i=1;i<=nums.size();i++){
            m[i]++;
        }
        
        
        int u,w;
        vector<int>v;
        for(auto it:m){
           if(it.second==3) u=it.first;
        }
        v.push_back(u);
        for(auto it:m){
           if(it.second==1) w=it.first;
        }
        v.push_back(w);
        
        
        return v;
    }
};




class Solution {
public:
    vector<int> findErrorNums(vector<int>& nums) {

        int n = nums.size();
        int i;

        sort(nums.begin(), nums.end());
        int res=0;
        int sum=0;
        int p1=0,p2=0;
        for(i=0;i<n;i++)
        {
            res = nums[i]^nums[i+1];
            if(res==0)
            {
                p1 = nums[i];
                break;
            }
        }

        nums[i]=0;

        for(i=0;i<n;i++)
        {
            sum+=nums[i];
        }
        int total = n*(n+1)/2;
         p2 = total-sum;
        

        vector<int> v{p1,p2};

        return v;
        
    }
};




